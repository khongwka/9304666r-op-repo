pipeline {
    agent any

    environment {
        QA_CONTAINER = '9304666r-qa-svr'
        QA_IMAGE = 'qa-bkup-image'
    }

    stages {

        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Op-9304666r-S1') {
            steps {
                script {
                    echo "Removing old QA backup image..."
                    sh "docker rmi -f ${QA_IMAGE} || true"

                    echo "Creating new QA backup image from container ${QA_CONTAINER}..."
                    sh "docker commit ${QA_CONTAINER} ${QA_IMAGE}"

                    echo "Copying Puppet script into QA container..."
                    sh "docker cp 9304666r_script ${QA_CONTAINER}:/tmp/9304666r_script"
                    sh "docker exec ${QA_CONTAINER} chmod +x /tmp/9304666r_script"

                    echo "Copying HTML file into QA container..."
                    sh "docker exec ${QA_CONTAINER} mkdir -p /operate/9304666r/"
                    sh "docker cp index-op-9304666r.html ${QA_CONTAINER}:/operate/9304666r/index-op-9304666r.html"

                    echo "Running 9304666r_script inside QA container..."
                    sh "docker exec ${QA_CONTAINER} /tmp/9304666r_script"

                    echo "Op-S1-9304666r: QA web server is backup and updated"
                }
            }
        }

        stage('Op-9304666r-S2') {
            steps {
                script {
                    echo "Op-9304666r-S2: Checking on whether QA server is running after update"

                    // Run curl on the Jenkins host (VM) to hit container port 33200
                    sh "curl -Is http://localhost:33200 | head -n 1 > /tmp/qa-result-file"

                    // Read the result and fail the build if HTTP status is not 200
                    def result = readFile('/tmp/qa-result-file').trim()
                    echo "QA web test result: ${result}"

                    if (!result.contains('200 OK')) {
                        error("QA web test failed: ${result}")
                    } else {
                        echo "QA web test passed!"
                    }
                }
            }
        }
    }
}

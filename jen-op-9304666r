pipeline {
    agent any

    environment {
        QA_NAME = "9304666r-qa-svr"
        QA_BKUP_IMAGE = "qa-bkup-image"
        PROD_NAME = "9304666r-prod-svr"
        PROD_BKUP_IMAGE = "prod-bkup-image"
    }

    stages {
        /* ---------- S1 ---------- */
        stage('Op-9304666r-S1') {
            steps {
                script {
                    // existing S1 code here...
                }
            }
        }

        /* ---------- S2 ---------- */
        stage('Op-9304666r-S2') {
            steps {
                // existing S2 code here...
            }
        }

        /* ---------- S3 ---------- */
        stage('Op-9304666r-S3') {
            steps {
                script {
                    // existing S3 code here...
                }
            }
        }

        /* ---------- S4 ---------- */
        stage('Op-9304666r-S4') {
            steps {
                // existing S4 code here...
            }
        }

        /* ---------- S5 ---------- */
        stage('Op-9304666r-S5') {
            steps {
                sh '''
                    docker start 9304666r-prod-svr || true
                    HOST_IP=$(hostname -I | awk '{print $1}')
                    echo Using host IP: $HOST_IP
                    curl -Is http://$HOST_IP:33500 | head -n 1 > prod-result-file
                    cat prod-result-file | grep -q "HTTP/1.1 200 OK" || { echo "Prod server not responding"; exit 1; }
                '''
                echo 'Op-9304666r-S5: Checking on whether Prod server is running after update'
            }
        }

        /* ---------- S6 ---------- */
        stage('Op-9304666r-S6') {
            steps {
                script {
                    def proceed = input(
                        id: 'prodProceed',
                        message: 'Prod server returned 200 OK. Release to production?',
                        ok: 'Proceed',
                        parameters: [
                            choice(name: 'CHOICE',
                                choices: ['Proceed', 'Rollback'],
                                description: 'Choose action for Prod server')
                        ]
                    )
                    if (proceed == 'Proceed') {
                        echo 'Op-9304666r-S6: Proceed to release Prod web server to production'
                    } else {
                        echo 'Op-9304666r-S6: Prod web server is rolled back'
                        sh '''
                            docker stop 9304666r-prod-svr || true
                            docker rm -f 9304666r-prod-svr || true
                            docker run -d --name 9304666r-prod-svr -p 33500:80 prod-bkup-image
                        '''
                        error('Aborting pipeline')
                    }
                }
            }
        }

        /* ---------- S7 ---------- */
        stage('Op-9304666r-S7') {
            steps {
                echo 'Op-9304666r-S7: Prod web server is monitored and ready to serve.'
            }
        }
    }

    post {
        always {
            echo '9304666r-operate-pipeline finished'
        }
    }
}
